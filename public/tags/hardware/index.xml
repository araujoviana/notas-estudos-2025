<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hardware on Anotações de Estudos - 2025</title>
    <link>http://localhost:1313/tags/hardware/</link>
    <description>Recent content in Hardware on Anotações de Estudos - 2025</description>
    <generator>Hugo -- 0.126.2</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Feb 2025 13:04:32 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/hardware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kernel</title>
      <link>http://localhost:1313/posts/aula-12/</link>
      <pubDate>Tue, 25 Feb 2025 13:04:32 -0300</pubDate>
      <guid>http://localhost:1313/posts/aula-12/</guid>
      <description>Definição de Kernel Serve como uma ponte entre o hardware e o software, além de gerenciar os recursos da máquina para que os programas usem os componentes da maneira correta.
Nível de Privilégio Mecanismo que determina quais instruções um programa pode exectuar e quais recursos pode acessar.
Exemplos principais (existem mais):
Modo Kernel (privilegiado): Permite acesso completo ao hardware e execução de instruções privilegiadas. Modo usuário (não privilegiado): Restringe acesso direto ao hardware e proíbe instruções privilegiadas, sendo necessárias o uso de chamadas do sistema (syscalls).</description>
    </item>
    <item>
      <title>Evolução do Gerenciamento de Processos</title>
      <link>http://localhost:1313/posts/aula-6/</link>
      <pubDate>Tue, 18 Feb 2025 15:16:46 -0300</pubDate>
      <guid>http://localhost:1313/posts/aula-6/</guid>
      <description>Sistemas Tipos de tratamento de programas Sistemas monoprogramados - Carrega apenas um programa por vez. Sistemas multiprogramados - Carrega múltiplos programas na memória. Problemas dos computadores (da época) A CPU ficava ociosa quando precisava interagir com um dispositivo de E/S. Programadores precisavam levar em consideração as particularidades de hardware de cada sistema para programar. Soluções Problema 1 (CPU ociosa) Preemptividade: Sistema era capaz de pausar um processo que estivesse aguardando por uma operação de E/S, liberando a CPU (Troca de contexto).</description>
    </item>
    <item>
      <title>ENIAC e Sistemas em Lote</title>
      <link>http://localhost:1313/posts/aula-4/</link>
      <pubDate>Tue, 11 Feb 2025 15:04:39 -0300</pubDate>
      <guid>http://localhost:1313/posts/aula-4/</guid>
      <description>Definição de computador Computador :: Entrada -&amp;gt; Saida Computador entrada = ... Todo computador deve ter entradas e saídas.
ENIAC Usava válvulas Operadores de Computador Sistema monoprogramado (1 programa por vez) Sistema em lote (BATCH) Sistema gerencia a fila Cada processo -&amp;gt; job Sem interação com o usuário jobs independentes Dispositivos de E/S Programadores precisavam conhecer as particularidades do hardware de cada dispositivo </description>
    </item>
  </channel>
</rss>
