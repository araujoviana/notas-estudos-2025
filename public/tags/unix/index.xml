<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>UNIX on Anotações de Estudos - 2025</title>
    <link>http://localhost:1313/tags/unix/</link>
    <description>Recent content in UNIX on Anotações de Estudos - 2025</description>
    <generator>Hugo -- 0.126.2</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Mar 2025 14:20:00 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Algoritmos de Escalonamento</title>
      <link>http://localhost:1313/posts/aula-24/</link>
      <pubDate>Tue, 18 Mar 2025 14:20:00 -0300</pubDate>
      <guid>http://localhost:1313/posts/aula-24/</guid>
      <description>Politicas de Escalonamento Carga de trabalho Conjunto de processos que precisma ser executados em um sistema
Exemplo $P1, P2,P3,P4$ sãp processos que possuem tarefas a realizar. Nesse caso, a carga de trabalho é composta por $P1, P2,P3,P4$ e cada um tem suas próprias caracteristicas.
Suposições sobre carga de trabalho Essas suposições vão se tornando inválidas
Todos os processos precisam do mesmo tempo para finalizar suas tarefas. Todos os processos serão admitidos ao mesmo tempo Um processo será executado ininterruptamente até concluir (preemptividade).</description>
    </item>
    <item>
      <title>Processos</title>
      <link>http://localhost:1313/posts/aula-20/</link>
      <pubDate>Tue, 11 Mar 2025 12:06:13 -0300</pubDate>
      <guid>http://localhost:1313/posts/aula-20/</guid>
      <description>Consulte o slide original para as ilustrações que são bem úteis
Programas Vs. Processos Programas Conjunto de instruções armazenados na memória secundária Passivo, não consome recursos além do armazenamento Processos Execução ativa de um programa pelo sistema operacional Ativo, utiliza recursos do sistema como memória RAM, CPU e I/O Quando um programa é executado, um processo é criado no SO
Estados dos processos Novo Pronto (admitido na fila de prontos) Executando (ele foi escalonado, pode voltar pra fila de prontos) Terminado (concluiu todas as instruções ou sofreu um erro fatal) Esperando (quando solicita uma instrução de I/O, depois volta pra fila de prontos) Onde o processo existe Um processo existe na memória principal enquanto está sendo executado.</description>
    </item>
    <item>
      <title>Evolução do Gerenciamento de Processos</title>
      <link>http://localhost:1313/posts/aula-6/</link>
      <pubDate>Tue, 18 Feb 2025 15:16:46 -0300</pubDate>
      <guid>http://localhost:1313/posts/aula-6/</guid>
      <description>Sistemas Tipos de tratamento de programas Sistemas monoprogramados - Carrega apenas um programa por vez. Sistemas multiprogramados - Carrega múltiplos programas na memória. Problemas dos computadores (da época) A CPU ficava ociosa quando precisava interagir com um dispositivo de E/S. Programadores precisavam levar em consideração as particularidades de hardware de cada sistema para programar. Soluções Problema 1 (CPU ociosa) Preemptividade: Sistema era capaz de pausar um processo que estivesse aguardando por uma operação de E/S, liberando a CPU (Troca de contexto).</description>
    </item>
  </channel>
</rss>
