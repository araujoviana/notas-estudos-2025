<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Projeto E Análise De Algoritmos on Anotações de Estudos - 2025</title>
    <link>http://localhost:1313/categories/projeto-e-an%C3%A1lise-de-algoritmos/</link>
    <description>Recent content in Projeto E Análise De Algoritmos on Anotações de Estudos - 2025</description>
    <generator>Hugo -- 0.126.2</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Feb 2025 14:17:13 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/projeto-e-an%C3%A1lise-de-algoritmos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Resolução de Recorrências</title>
      <link>http://localhost:1313/posts/aula-16/</link>
      <pubDate>Fri, 28 Feb 2025 14:17:13 -0300</pubDate>
      <guid>http://localhost:1313/posts/aula-16/</guid>
      <description>Métodos para Resolver Recorrências Substituição Iterativos Árvore de Recursão Método Mestre 1. Substituição A ideia é arriscar um palpite para a solução da recorrência
e, em seguida, usar indução matemática para provar que o palpite está correto.
Exemplo 1 int f(int n) { if (n &amp;gt; 0) { printf(&amp;#34;%d&amp;#34;, n); f(n - 1); } return 0; } Recorrência:
$T(n) = 1$ se $n = 0$ $T(n) = T(n-1) + 1$ se $n &amp;gt; 0$ Palpite:</description>
    </item>
  </channel>
</rss>
